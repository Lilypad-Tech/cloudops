---
- name: Deploy Lilypad Infrastructure
  hosts: lilypad
  become: true

  vars:
    nodejs_version: "20.x"
    network: "mumbai" # modify this to change the network and .env file used

  environment:
    PATH: "/opt/go/1.21.1/bin:{{ ansible_env.PATH }}"
    GOROOT: "/opt/go/1.21.1"
    GOPATH: "/opt/go/1.21.1/bin"
    
  roles:
    - geerlingguy.docker
    - geerlingguy.nodejs
    - gantsign.golang

  tasks:
    - name: Create Lilypad user
      ansible.builtin.user:
        name: lilypad
        state: present
        shell: /bin/bash
        groups: docker,sudo
        createhome: yes
        home: /home/lilypad

    - name: Ensure lilypad user has permissions for /app directory
      ansible.builtin.file:
        path: /app
        state: directory
        owner: lilypad
        group: lilypad
        mode: '0755'
      become: true

    - name: Give lilypad passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^lilypad'
        line: 'lilypad ALL=(ALL) NOPASSWD:ALL'
        validate: 'visudo -cf %s'

    - name: Create Lilypad folder
      ansible.builtin.file:
        path: /app/lilypad
        state: directory
        owner: lilypad
        group: lilypad
        mode: 0755

    - name: Check out Lilypad code
      ansible.builtin.git:
        repo: https://github.com/bacalhau-project/lilypad
        dest: /app/lilypad
        version: main
        force: false
      become: true
      become_user: lilypad

    - name: Install necessary packages
      package:
        name: ssh-askpass
        state: present

    - name: Yarn GPG
      apt_key:
        url: https://dl.yarnpkg.com/debian/pubkey.gpg
        state: present

    - name: Importing Yarn Package
      copy:
        content: "deb https://dl.yarnpkg.com/debian/ stable main"
        dest: /etc/apt/sources.list.d/yarn.list

    - name: Installing Yarn
      apt:
        name:
          - yarn
        update_cache: true

    - name: Yarn Install Hardhat
      ansible.builtin.shell:
        cmd: "/usr/bin/yarn install"
        chdir: "/app/lilypad/hardhat"

    - name: Ensure the script is executable
      ansible.builtin.file:
        path: "/app/lilypad/stack"
        mode: 'u+x'
      become: true
      become_user: lilypad

    - name: Copy file from local to remote
      copy:
        src: ".env.{{ network }}"
        dest: /app/lilypad/.env

    - name: Find systemd unit files on Lilypad server
      ansible.builtin.find:
        paths: "/app/lilypad/ops/systemd"
        patterns: "*.service"
      register: systemd_files

    - name: Copy systemd unit files for Lilypad
      ansible.builtin.copy:
        src: "{{ item.path }}"
        dest: "/etc/systemd/system/"
        remote_src: yes
        mode: '0644'
      with_items: "{{ systemd_files.files }}"
      notify: Reload systemd

    - name: Change directory to /app/lilypad and build the project
      ansible.builtin.shell:
        cmd: go build -buildvcs=false .
        chdir: /app/lilypad

    - name: Move the Lilypad binary to /usr/bin
      ansible.builtin.command:
        cmd: mv /app/lilypad/lilypad /usr/bin/lilypad
      become: yes

    - name: Download Bacalhau binary archive
      ansible.builtin.get_url:
        url: "https://github.com/bacalhau-project/bacalhau/releases/download/v1.0.3/bacalhau_v1.0.3_linux_amd64.tar.gz"
        dest: "/tmp/bacalhau_v1.0.3_linux_amd64.tar.gz"
        mode: '0644'

    - name: Extract Bacalhau binary
      ansible.builtin.unarchive:
        src: "/tmp/bacalhau_v1.0.3_linux_amd64.tar.gz"
        dest: "/tmp/"
        remote_src: yes

    - name: Move Bacalhau binary to /usr/bin
      ansible.builtin.command:
        cmd: mv /tmp/bacalhau /usr/bin/bacalhau
      become: yes

    - name: Create IPFS data directory
      ansible.builtin.file:
        path: /app/data/ipfs
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        mode: '0755'
      become: yes

    - name: Change ownership of /app/data
      ansible.builtin.file:
        path: /app/data
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        recurse: yes
      become: yes
    
    - name: Start Bacalhau service
      ansible.builtin.systemd:
        name: bacalhau
        state: started
        enabled: yes

    - name: Read .env file
      ansible.builtin.slurp:
        src: /app/lilypad/.env
      register: dot_env

    - name: Decode .env content
      set_fact:
        env_content: "{{ dot_env['content'] | b64decode }}"

    - name: Extract variables
      set_fact:
        extracted_vars:
          resource_provider_private_key: "{{ env_content | regex_findall('RESOURCE_PROVIDER_PRIVATE_KEY=([^\n\r]+)') | first | default('') }}"
          solver_address: "{{ env_content | regex_findall('SOLVER_ADDRESS=([^\n\r]+)') | first | default('') }}"
          mediator_address: "{{ env_content | regex_findall('MEDIATOR_ADDRESS=([^\n\r]+)') | first | default('') }}"
          solver_private_key: "{{ env_content | regex_findall('SOLVER_PRIVATE_KEY=([^\n\r]+)') | first | default('') }}"
          mediator_private_key: "{{ env_content | regex_findall('MEDIATOR_PRIVATE_KEY=([^\n\r]+)') | first | default('') }}"
          infura_key: "{{ env_content | regex_findall('INFURA_KEY=([^\n\r]+)') | first | default('') }}"
          log_level: "{{ env_content | regex_findall('LOG_LEVEL=([^\n\r]+)') | first | default('') }}"
          network: "{{ env_content | regex_findall('NETWORK=([^\n\r]+)') | first | default('') }}"
          web3_rpc_url: "{{ env_content | regex_findall('WEB3_RPC_URL=([^\n\r]+)') | first | default('') }}"
          web3_chain_id: "{{ env_content | regex_findall('WEB3_CHAIN_ID=([^\n\r]+)') | first | default('') }}"
          web3_controller_address: "{{ env_content | regex_findall('WEB3_CONTROLLER_ADDRESS=([^\n\r]+)') | first | default('') }}"
          web3_token_address: "{{ env_content | regex_findall('WEB3_TOKEN_ADDRESS=([^\n\r]+)') | first | default('') }}"
          web3_mediation_address: "{{ env_content | regex_findall('WEB3_MEDIATION_ADDRESS=([^\n\r]+)') | first | default('') }}"
          web3_jobcreator_address: "{{ env_content | regex_findall('WEB3_JOBCREATOR_ADDRESS=([^\n\r]+)') | first | default('') }}"
          web3_payments_address: "{{ env_content | regex_findall('WEB3_PAYMENTS_ADDRESS=([^\n\r]+)') | first | default('') }}"
          web3_storage_address: "{{ env_content | regex_findall('WEB3_STORAGE_ADDRESS=([^\n\r]+)') | first | default('') }}"
          web3_users_address: "{{ env_content | regex_findall('WEB3_USERS_ADDRESS=([^\n\r]+)') | first | default('') }}"
          server_url: "{{ env_content | regex_findall('SERVER_URL=([^\n\r]+)') | first | default('') }}"
          server_port: "{{ env_content | regex_findall('SERVER_PORT=([^\n\r]+)') | first | default('') }}"
          directory_address: "{{ env_content | regex_findall('DIRECTORY_ADDRESS=([^\n\r]+)') | first | default('') }}"
          job_creator_address: "{{ env_content | regex_findall('JOB_CREATOR_ADDRESS=([^\n\r]+)') | first | default('') }}"
          bacalhau_api_host: "{{ env_content | regex_findall('BACALHAU_API_HOST=([^\n\r]+)') | first | default('') }}"

    - name: Save resource-provider.env
      ansible.builtin.copy:
        dest: /app/lilypad/resource-provider.env
        content: |
          WEB3_PRIVATE_KEY={{ extracted_vars.resource_provider_private_key }}
          SERVICE_SOLVER={{ extracted_vars.solver_address }}
          SERVICE_MEDIATORS={{ extracted_vars.mediator_address }}
          WEB3_RPC_URL={{ extracted_vars.web3_rpc_url }}
          WEB3_CHAIN_ID={{ extracted_vars.web3_chain_id }}
          WEB3_CONTROLLER_ADDRESS={{ extracted_vars.web3_controller_address }}
          WEB3_TOKEN_ADDRESS={{ extracted_vars.web3_token_address }}
          WEB3_MEDIATION_ADDRESS={{ extracted_vars.web3_mediation_address }}
          WEB3_JOBCREATOR_ADDRESS={{ extracted_vars.web3_jobcreator_address }}
          WEB3_PAYMENTS_ADDRESS={{ extracted_vars.web3_payments_address }}
          WEB3_STORAGE_ADDRESS={{ extracted_vars.web3_storage_address }}
          WEB3_USERS_ADDRESS={{ extracted_vars.web3_users_address }}
          WEB3_INFURA_KEY={{ extracted_vars.infura_key }}
          WEB3_CHAIN_ID={{ extracted_vars.web3_chain_id }}
          WEB3_USERS_ADDRESS={{ extracted_vars.web3_users_address }}
          BACAHLAU_API_HOST={{ extracted_vars.bacalhau_api_host }}
          JOB_CREATOR_ADDRESS={{ extracted_vars.job_creator_address }}
        owner: lilypad
        group: lilypad
        mode: '0644'

    - name: Save mediator.env with additional variables
      ansible.builtin.copy:
        dest: /app/lilypad/mediator.env
        content: |
          WEB3_PRIVATE_KEY={{ extracted_vars.mediator_private_key }}
          WEB3_DIRECTORY_ADDRESS={{ extracted_vars.directory_address }}
          SERVICE_SOLVER={{ extracted_vars.solver_address }}
          WEB3_RPC_URL={{ extracted_vars.web3_rpc_url }}
          WEB3_CHAIN_ID={{ extracted_vars.web3_chain_id }}
          WEB3_CONTROLLER_ADDRESS={{ extracted_vars.web3_controller_address }}
          WEB3_TOKEN_ADDRESS={{ extracted_vars.web3_token_address }}
          WEB3_MEDIATION_ADDRESS={{ extracted_vars.web3_mediation_address }}
          WEB3_JOBCREATOR_ADDRESS={{ extracted_vars.web3_jobcreator_address }}
          WEB3_PAYMENTS_ADDRESS={{ extracted_vars.web3_payments_address }}
          WEB3_STORAGE_ADDRESS={{ extracted_vars.web3_storage_address }}
          WEB3_USERS_ADDRESS{{ extracted_vars.web3_users_address }}
          WEB3_INFURA_KEY={{ extracted_vars.infura_key }}
          WEB3_CHAIN_ID={{ extracted_vars.web3_chain_id }}
          WEB3_USERS_ADDRESS={{ extracted_vars.web3_users_address }}
          JOB_CREATOR_ADDRESS={{ extracted_vars.job_creator_address }}
        owner: lilypad
        group: lilypad
        mode: '0644'

    - name: Save solver.env with additional variables
      ansible.builtin.copy:
        dest: /app/lilypad/solver.env
        content: |
          WEB3_PRIVATE_KEY={{ extracted_vars.solver_private_key }}
          JOB_CREATOR_ADDRESS={{ extracted_vars.job_creator_address }}
          SERVICE_MEDIATORS={{ extracted_vars.mediator_address }}
          SERVER_URL={{ extracted_vars.server_url }}
          SERVER_PORT={{ extracted_vars.server_port }}
          WEB3_RPC_URL={{ extracted_vars.web3_rpc_url }}
          WEB3_CHAIN_ID={{ extracted_vars.web3_chain_id }}
          WEB3_CONTROLLER_ADDRESS={{ extracted_vars.web3_controller_address }}
          WEB3_TOKEN_ADDRESS={{ extracted_vars.web3_token_address }}
          WEB3_MEDIATION_ADDRESS={{ extracted_vars.web3_mediation_address }}
          WEB3_JOBCREATOR_ADDRESS={{ extracted_vars.web3_jobcreator_address }}
          WEB3_PAYMENTS_ADDRESS={{ extracted_vars.web3_payments_address }}
          WEB3_STORAGE_ADDRESS={{ extracted_vars.web3_storage_address }}
          WEB3_USERS_ADDRESS{{ extracted_vars.web3_users_address }}
          WEB3_INFURA_KEY={{ extracted_vars.infura_key }}
          WEB3_CHAIN_ID={{ extracted_vars.web3_chain_id }}
          WEB3_USERS_ADDRESS={{ extracted_vars.web3_users_address }}
        owner: lilypad
        group: lilypad
        mode: '0644'


    - name: Start Solver service
      ansible.builtin.systemd:
        name: solver
        state: started
        enabled: yes

    - name: Start Mediator service
      ansible.builtin.systemd:
        name: mediator
        state: started
        enabled: yes

    - name: Start Resource Provider service
      ansible.builtin.systemd:
        name: resource-provider
        state: started
        enabled: yes

  handlers:
    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes