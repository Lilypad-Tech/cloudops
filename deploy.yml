---
- name: Deploy Lilypad Infrastructure
  hosts: lilypad
  become: true

  vars:
    nodejs_version: "20.x"

  environment:
    PATH: "/opt/go/1.21.1/bin:{{ ansible_env.PATH }}"
    GOROOT: "/opt/go/1.21.1"
    GOPATH: "/opt/go/1.21.1/bin"
    
  roles:
    - geerlingguy.docker
    - geerlingguy.nodejs
    - gantsign.golang

  tasks:
    - name: If we are running on an ARM64 machine, add amd64 emulation compatibility
      ansible.builtin.command:
        cmd: docker run --privileged --rm tonistiigi/binfmt --install amd64
      when: ansible_architecture == "aarch64"
      become: true

    - name: Create Lilypad user
      ansible.builtin.user:
        name: lilypad
        state: present
        shell: /bin/bash
        groups: docker,sudo
        createhome: yes
        home: /home/lilypad

    - name: Ensure lilypad user has permissions for /app directory
      ansible.builtin.file:
        path: /app
        state: directory
        owner: lilypad
        group: lilypad
        mode: '0755'
      become: true

    - name: Give lilypad passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^lilypad'
        line: 'lilypad ALL=(ALL) NOPASSWD:ALL'
        validate: 'visudo -cf %s'

    - name: Create Lilypad folder
      ansible.builtin.file:
        path: /app/lilypad
        state: directory
        owner: lilypad
        group: lilypad
        mode: 0755

    - name: Check out Lilypad code
      ansible.builtin.git:
        repo: https://github.com/bacalhau-project/lilypad
        dest: /app/lilypad
        version: testnet-sepolia
        force: false
      become: true
      become_user: lilypad

    - name: Install .env file for chosen network
      ansible.builtin.copy:
        src: ".env"
        dest: /app/lilypad/.env
        owner: lilypad
        group: lilypad
        mode: '0644'

    - name: Install necessary packages
      package:
        name: ssh-askpass
        state: present

    - name: Yarn GPG
      apt_key:
        url: https://dl.yarnpkg.com/debian/pubkey.gpg
        state: present

    - name: Importing Yarn Package
      copy:
        content: "deb https://dl.yarnpkg.com/debian/ stable main"
        dest: /etc/apt/sources.list.d/yarn.list

    - name: Installing Yarn
      apt:
        name:
          - yarn
        update_cache: true

    - name: Find systemd unit files on Lilypad server
      ansible.builtin.find:
        paths: "/app/lilypad/ops/systemd"
        patterns: "*.service"
      register: systemd_files

    - name: Copy systemd unit files for Lilypad
      ansible.builtin.copy:
        src: "{{ item.path }}"
        dest: "/etc/systemd/system/"
        remote_src: yes
        mode: '0644'
      with_items: "{{ systemd_files.files }}"
      notify: Reload systemd

    - name: Download Lilypad binaries
      ansible.builtin.get_url:
        url: "https://github.com/bacalhau-project/lilypad/releases/download/v2.0.0-6afc1cc-multiarch/lilypad-linux-{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' if ansible_architecture == 'aarch64' else ansible_fail('Unsupported architecture') }}"
        dest: "/usr/bin/lilypad"
        mode: '0755'
        owner: root
        group: root

    - name: Download Bacalhau binary archive for amd64 or arm64
      ansible.builtin.get_url:
        url: "https://github.com/bacalhau-project/bacalhau/releases/download/v1.0.3/bacalhau_v1.0.3_linux_{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' if ansible_architecture == 'aarch64' else ansible_fail('Unsupported architecture') }}.tar.gz"
        dest: "/tmp/bacalhau_v1.0.3_linux.tar.gz"
        mode: '0644'
      when: ansible_architecture in ['x86_64', 'aarch64']

    - name: Extract Bacalhau binary for amd64 or arm64
      ansible.builtin.unarchive:
        src: "/tmp/bacalhau_v1.0.3_linux.tar.gz"
        dest: "/tmp/"
        remote_src: yes
      when: ansible_architecture in ['x86_64', 'aarch64']

    - name: Move Bacalhau binary to /usr/bin
      ansible.builtin.copy:
        src: /tmp/bacalhau
        dest: /usr/bin/bacalhau
        remote_src: true
        owner: root
        group: root
        mode: '0755'
      become: true

    - name: Create IPFS data directory
      ansible.builtin.file:
        path: /app/data/ipfs
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        mode: '0755'
      become: yes

    - name: Change ownership of /app/data
      ansible.builtin.file:
        path: /app/data
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        recurse: yes
      become: yes
    
    - name: Start Bacalhau service
      ansible.builtin.systemd:
        name: bacalhau
        state: started
        enabled: yes

    - name: Read .env file
      ansible.builtin.slurp:
        src: /app/lilypad/.env
      register: dot_env

    - name: Decode .env content
      set_fact:
        env_content: "{{ dot_env['content'] | b64decode }}"

    - name: Extract RESOURCE_PROVIDER_PRIVATE_KEY
      set_fact:
        resource_provider_private_key: "{{ env_content | regex_findall('RESOURCE_PROVIDER_PRIVATE_KEY=([^\n\r]+)') | first }}"

    - name: Extract SOLVER_ADDRESS
      set_fact:
        solver_address: "{{ env_content | regex_findall('SOLVER_ADDRESS=([^\n\r]+)') | first }}"

    - name: Extract MEDIATOR_ADDRESS
      set_fact:
        mediator_address: "{{ env_content | regex_findall('MEDIATOR_ADDRESS=([^\n\r]+)') | first }}"

    - name: Save RESOURCE_PROVIDER_PRIVATE_KEY
      ansible.builtin.copy:
        dest: /app/lilypad/resource-provider.env
        content: |
          WEB3_PRIVATE_KEY={{ resource_provider_private_key }}
          SERVICE_SOLVER={{ solver_address }}
          SERVICE_MEDIATORS={{ mediator_address }}
        owner: lilypad
        group: lilypad
        mode: '0644'

    - name: Extract MEDIATOR_PRIVATE_KEY
      set_fact:
        mediator_private_key: "{{ env_content | regex_findall('MEDIATOR_PRIVATE_KEY=([^\n\r]+)') | first }}"

    - name: Extract DIRECTORY_ADDRESS
      set_fact:
        directory_address: "{{ env_content | regex_findall('DIRECTORY_ADDRESS=([^\n\r]+)') | first }}"

    - name: Extract SOLVER_ADDRESS
      set_fact:
        solver_address: "{{ env_content | regex_findall('SOLVER_ADDRESS=([^\n\r]+)') | first }}"

    - name: Save MEDIDATOR_PRIVATE_KEY
      ansible.builtin.copy:
        dest: /app/lilypad/mediator.env
        content: |
          WEB3_PRIVATE_KEY={{ mediator_private_key }}
          WEB3_DIRECTORY_ADDRESS={{ directory_address }}
          SERVICE_SOLVER={{ solver_address }}
        owner: lilypad
        group: lilypad
        mode: '0644'

    - name: Extract SOLVER_PRIVATE_KEY
      set_fact:
        solver_private_key: "{{ env_content | regex_findall('SOLVER_PRIVATE_KEY=([^\n\r]+)') | first }}"
        
    - name: Extract JOB_CREATOR_ADDRESS
      set_fact:
        job_creator_address: "{{ env_content | regex_findall('JOB_CREATOR_ADDRESS=([^\n\r]+)') | first }}"

    - name: Save SOLVER_PRIVATE_KEY with additional variables
      ansible.builtin.copy:
        dest: /app/lilypad/solver.env
        content: |
          WEB3_PRIVATE_KEY={{ solver_private_key }}
          JOB_CREATOR_ADDRESS={{ job_creator_address }}
          SERVICE_MEDIATORS={{ mediator_address }}
          WEB3_CHAIN_ID=11155111
          WEB3_CONTROLLER_ADDRESS=0x433C91FA54b9c11550b07672E1FA2b06860e5b05
        owner: lilypad
        group: lilypad
        mode: '0644'

    - name: Start Solver service
      ansible.builtin.systemd:
        name: solver
        state: started
        enabled: yes

    - name: Start Mediator service
      ansible.builtin.systemd:
        name: mediator
        state: started
        enabled: yes

    - name: Start Resource Provider service
      ansible.builtin.systemd:
        name: resource-provider
        state: started
        enabled: yes

  handlers:
    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes

